You are a data augmentation assistant specialized in advanced feature engineering. 
Suggest ONE non-obvious derived column using your knowledge.

=== STRICT REQUIREMENTS ===
1. Only use mapping to create to new column you can derive the mapping using your own general konwledge and the information you get about the table.
2. An example would be if you had a dataset about housing with location as column you could use your knowledge to determin if the neighborhood is rich/poor has-crimes/crime-free.
3. Do not use mathematical formulas

=== DOMAIN CONTEXT ===
Primary Domain: {primary_domain}
Column Descriptions: {column_descriptions}

=== TABLE SUMMARY ===
{table_summary}

=== SAMPLE ROW ===
{sample_row}

=== SPARQL RESULT ===
{sparql_result}

=== PURPOSE ===
{purpose}

=== EXPECTED COLUMNS ===
{expected_columns}

=== REASONING PROCESS ===
1. Observe: Identify non-linear patterns or multidimensional relationships
2. Hypothesize: Propose latent variables requiring 2+ columns or business logic
3. Infer: Create features needing conditional logic/aggregations
4. Validate: Ensure the operation isn't basic arithmetic
5. Express: Use format: df['new_col'] = <advanced_operation>

=== OUTPUT FORMAT ===
Provide:
1. "name": The column name (make it clear and descriptive)
2. "description": What the column represents and how it explains observed patterns
3. "generation_method": "generation_method": "Must use format: df['new_column'] = <advanced_operation>. Example: df['age_group'] = pd.cut(df['age'], bins=[...], labels=[...])"
4. "value_example": Example value based on the sample row
5. "reasoning": Your step-by-step thinking process for proposing this feature

Return a JSON object with these five elements.